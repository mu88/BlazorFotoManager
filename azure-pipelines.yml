# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- release

pool:
  vmImage: 'windows-latest'

steps:
- task: DotNetCoreInstaller@1
  displayName: Install .NET Core 3.1 SDK
  inputs:
    packageType: 'sdk'
    version: '3.1.101'

- task: UseDotNet@2
  displayName: Install .NET Core 2.2 SDK
  inputs:
    packageType: 'sdk'
    version: '2.2.401'

- script: |
    dotnet tool install ElectronNET.CLI -g
  displayName: 'Install global tool ElectronNET.CLI'

- script: |
    cd FotoManager
    electronize build /target win
  displayName: 'Build Windows app with ElectronNET'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'Tests/Tests.csproj'
    arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude="[*]FotoManager.Pages.*%2c[*]FotoManager.Startup"'
    publishTestResults: true
  displayName: 'Run tests'

- task: reportgenerator@4
  inputs:
    reports: '**/coverage.cobertura.xml'
    targetdir: 'CoverageReport'
    reporttypes: 'HtmlInline_AzurePipelines_Dark'
  displayName: 'Refactor coverage report'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'
    reportDirectory: 'CoverageReport'
  displayName: 'Publish code coverage results'

- script: |
    mkdir FotoManager\Release
    copy FotoManager\bin\Desktop\FotoFlipper*.exe FotoManager\Release
  displayName: 'Copy packed executable to separate location'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: FotoManager/Release
    artifactName: 'App'
  displayName: 'Publish build artifact'

- task: PublishGitHubRelease@0
  inputs:
    applicationName: 'BlazorFotoManager'
    gitSourceOption: 'github'
    token: '$(GitHubPAT)'
    repo: 'BlazorFotoManager'
    owner: 'mu88'
    tagName: 'v$(build.buildNumber)'
    releaseName: 'v$(build.buildNumber)'
    draft: false
    prerelease: false
    assetsPattern: '$(Build.SourcesDirectory)/FotoManager/Release/*'
  displayName: 'Create GitHub release'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/release'))